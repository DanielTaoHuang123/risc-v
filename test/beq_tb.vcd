$date
	Mon Jun  2 00:03:54 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module beq_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module uut $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 # rs2 [31:0] $end
$var wire 32 $ rs1 [31:0] $end
$var wire 7 % opcode [6:0] $end
$var wire 32 & instr [31:0] $end
$var wire 32 ' imm_ext [31:0] $end
$var wire 1 ( cfsm__pc_update $end
$var wire 1 ) cfsm__pc_src $end
$var wire 1 * alu__zero_flag $end
$var wire 2 + __tmp_ResultSrc [1:0] $end
$var wire 1 , __tmp_RegWrite $end
$var wire 1 - __tmp_MemWrite $end
$var wire 1 . __tmp_IRWrite $end
$var wire 4 / __tmp_FSMState [3:0] $end
$var wire 1 0 __tmp_Branch $end
$var wire 1 1 __tmp_AdrSrc $end
$var wire 2 2 __tmp_ALUSrcB [1:0] $end
$var wire 2 3 __tmp_ALUSrcA [1:0] $end
$var wire 32 4 __tmp_ALUOut [31:0] $end
$var wire 3 5 __tmp_ALUOp [2:0] $end
$var wire 4 6 __tmp_ALUControl [3:0] $end
$var reg 32 7 __tmp_ResultData [31:0] $end
$scope module alu $end
$var wire 1 * zeroE $end
$var wire 32 8 b [31:0] $end
$var wire 4 9 alu_control [3:0] $end
$var wire 32 : a [31:0] $end
$var reg 32 ; out [31:0] $end
$upscope $end
$scope module control_fsm $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 * zero_flag $end
$var wire 7 < opcode [6:0] $end
$var parameter 4 = ALUWB $end
$var parameter 4 > BRANCHIFEQ $end
$var parameter 4 ? DECODE $end
$var parameter 4 @ EXECUTEI $end
$var parameter 4 A EXECUTER $end
$var parameter 4 B FETCH $end
$var parameter 4 C MEMADR $end
$var parameter 4 D MEMREAD $end
$var parameter 4 E MEMWB $end
$var parameter 4 F MEMWRITE $end
$var parameter 4 G UNCONDJUMP $end
$var reg 3 H ALUOp [2:0] $end
$var reg 2 I ALUSrcA [1:0] $end
$var reg 2 J ALUSrcB [1:0] $end
$var reg 1 1 AdrSrc $end
$var reg 1 0 Branch $end
$var reg 4 K FSMState [3:0] $end
$var reg 1 . IRWrite $end
$var reg 1 - MemWrite $end
$var reg 1 ( PCUpdate $end
$var reg 1 , RegWrite $end
$var reg 2 L ResultSrc [1:0] $end
$var reg 4 M current_state [3:0] $end
$var reg 4 N next_state [3:0] $end
$var reg 1 ) pc_src $end
$upscope $end
$scope module fetch $end
$var wire 1 ) cfsm__pc_src $end
$var wire 1 ( cfsm__pc_update $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 O instr [31:0] $end
$var wire 32 P imm_ext [31:0] $end
$var reg 3 Q cur_state [2:0] $end
$var reg 3 R next_state [2:0] $end
$var reg 32 S pc_cur [31:0] $end
$var reg 32 T saved_imm_reg [31:0] $end
$scope module instruction_memory $end
$var wire 32 U A [31:0] $end
$var wire 1 ! CLK $end
$var wire 32 V RD [31:0] $end
$var wire 32 W WD [31:0] $end
$var wire 1 X WE $end
$var parameter 32 Y SIZE $end
$upscope $end
$upscope $end
$scope module instruction_decode $end
$var wire 1 Z RegWrite $end
$var wire 32 [ ResultData [31:0] $end
$var wire 1 ! clk $end
$var wire 32 \ instr [31:0] $end
$var wire 1 " reset $end
$var wire 32 ] writeData [31:0] $end
$var wire 7 ^ opcode [6:0] $end
$var wire 32 _ baseAddr [31:0] $end
$var wire 4 ` ALUControl [3:0] $end
$var reg 2 a alu_op [1:0] $end
$var reg 3 b funct3 [2:0] $end
$var reg 7 c funct7 [6:0] $end
$var reg 32 d imm_ext [31:0] $end
$var reg 5 e rd [4:0] $end
$var reg 5 f rs1 [4:0] $end
$var reg 5 g rs2 [4:0] $end
$scope module instanceALUDec $end
$var wire 2 h alu_op [1:0] $end
$var wire 3 i funct3 [2:0] $end
$var wire 7 j funct7 [6:0] $end
$var reg 4 k alu_control [3:0] $end
$upscope $end
$scope module instanceRegFile $end
$var wire 5 l Addr1 [4:0] $end
$var wire 5 m Addr2 [4:0] $end
$var wire 5 n Addr3 [4:0] $end
$var wire 1 ! clk $end
$var wire 32 o dataIn [31:0] $end
$var wire 1 Z regWrite $end
$var reg 32 p baseAddr [31:0] $end
$var reg 32 q writeData [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000000000 Y
b11 G
b111 F
b1001 E
b1000 D
b101 C
b0 B
b10 A
b100 @
b1 ?
b1010 >
b110 =
$end
#0
$dumpvars
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
zZ
0X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
x1
x0
bx /
x.
x-
x,
bx +
x*
x)
x(
bx '
bx &
bx %
bx $
bx #
1"
0!
$end
#5000
1.
01
b0 /
b0 K
0(
0)
00
b1 6
b1 9
b1 `
b1 k
b1 a
b1 h
b11111111111111111111111111110100 '
b11111111111111111111111111110100 P
b11111111111111111111111111110100 d
b100 g
b100 m
b100 f
b100 l
b0 e
b0 n
b0 c
b0 j
b0 b
b0 i
b1100011 %
b1100011 <
b1100011 ^
b1 N
b11111110010000100000101011100011 &
b11111110010000100000101011100011 O
b11111110010000100000101011100011 V
b11111110010000100000101011100011 \
b1 R
b0 M
b0 S
b0 U
b0 Q
1!
#10000
0"
0!
#15000
b0 5
b0 H
b1 2
b1 J
b1 3
b1 I
b1 /
b1 K
1*
b0 4
b0 ;
b1010 N
b101010 #
b101010 8
b101010 ]
b101010 q
b101010 $
b101010 :
b101010 _
b101010 p
b11111111111111111111111111110100 T
b1 Q
b1 M
1!
#20000
0!
#25000
b11 R
1(
1)
10
b0 +
b0 L
b1 5
b1 H
b0 2
b0 J
b10 3
b10 I
b1010 /
b1010 K
b0 N
b1010 M
1!
#30000
0!
#35000
b0 /
b0 K
0(
0)
00
0*
b1010100 4
b1010100 ;
b0 6
b0 9
b0 `
b0 k
b11 a
b11 h
b0 g
b0 m
b0 f
b0 l
bx %
bx <
bx ^
bx &
bx O
bx V
bx \
b11111111111111111111111111110100 S
b11111111111111111111111111110100 U
b0 R
b1 N
b11 Q
b0 M
1!
#40000
0!
#45000
b0 5
b0 H
b1 2
b1 J
b1 3
b1 I
b1 /
b1 K
b1 R
x*
bx 4
bx ;
b1 M
b0 Q
bx #
bx 8
bx ]
bx q
bx $
bx :
bx _
bx p
1!
#50000
1"
0!
#55000
b0 /
b0 K
b1 6
b1 9
b1 `
b1 k
b1 a
b1 h
b10000 '
b10000 P
b10000 d
b10 g
b10 m
b1 f
b1 l
b1100011 %
b1100011 <
b1100011 ^
b1000001000100001100011 &
b1000001000100001100011 O
b1000001000100001100011 V
b1000001000100001100011 \
b0 S
b0 U
b0 M
1!
#60000
0"
0!
#65000
b1 /
b1 K
b1010 N
0*
b11111111111111111111111111111111 4
b11111111111111111111111111111111 ;
b1 M
b10000 T
b1 Q
b101011 #
b101011 8
b101011 ]
b101011 q
b101010 $
b101010 :
b101010 _
b101010 p
1!
#70000
0!
#75000
b10 R
1(
10
b1 5
b1 H
b0 2
b0 J
b10 3
b10 I
b1010 /
b1010 K
b0 N
b1010 M
1!
#80000
0!
#85000
b0 /
b0 K
0(
00
b1010101 4
b1010101 ;
b0 6
b0 9
b0 `
b0 k
b11 a
b11 h
b0 g
b0 m
b0 f
b0 l
bx %
bx <
bx ^
bx &
bx O
bx V
bx \
b1 N
b100 S
b100 U
b0 R
b0 M
b10 Q
1!
#90000
0!
#95000
b0 5
b0 H
b1 2
b1 J
b1 3
b1 I
b1 /
b1 K
x*
bx 4
bx ;
b1 R
bx #
bx 8
bx ]
bx q
bx $
bx :
bx _
bx p
b0 Q
b1 M
1!
#100000
1"
0!
#105000
b0 /
b0 K
b1 6
b1 9
b1 `
b1 k
b10 a
b10 h
b1 g
b1 m
b1 f
b1 l
b1 e
b1 n
b100000 c
b100000 j
b110011 %
b110011 <
b110011 ^
b1000000000100001000000010110011 &
b1000000000100001000000010110011 O
b1000000000100001000000010110011 V
b1000000000100001000000010110011 \
b0 M
b0 S
b0 U
1!
#110000
0"
0!
#115000
b1 /
b1 K
1*
b0 4
b0 ;
b10 N
b1 #
b1 8
b1 ]
b1 q
b1 $
b1 :
b1 _
b1 p
b1 Q
b1 M
1!
#120000
0!
#125000
b10 5
b10 H
b0 2
b0 J
b10 3
b10 I
b10 /
b10 K
b110 N
b10 M
1!
#130000
0!
#135000
1,
b110 /
b110 K
b0 N
b110 M
1!
#140000
0!
